@startuml

'⭠⮎

actor "User-Agent" as ua
participant "Application" as app
participant "OAuth2 Server" as auth

ua -> app : GET /
app -> app : no sessionCookie
ua <-- app : ⮎ 302 /authorize

ua -> auth : GET /authorize?response_type=code&client_id&redirect_uri

group no authCookie

  auth -> auth : no authCookie
  ua <-- auth : ⮎ 302 /login?client_id&redirect_uri
  ua -> auth : GET /login?client_id&redirect_uri ⭠ page (csrf)
  ua -> auth : POST /login?password&username&password\n&client_id&redirect_uri&response_type&csrf
  auth -> auth : (?) csrf & authCookie

  note left
  **authCookie** = secure,/
    accessToken,expiresAt
  **refreshCookie** = secure,/login
    refreshToken,expiresAt
  end note

  ua <- auth : ⮎ META ⭠ set authCookie, (refreshCookie)
  ua -> auth : GET /authorize?response_type=code&client_id&redirect_uri

end 'group no authCookie

auth -> auth : (?) authCookie,\nclient_id,redirect_uri

group allow access

  ua <- auth : ⭠ page allow (csrf)
  ua -> auth : POST /allow?response_type=code&client_id&redirect_uri&csrf
  auth -> auth : (?) csrf & authCookie

end 'group allow access

group invalid

  ua x- auth : ⭠ page invalid

end 'group invalid

ua <- auth : ⮎ 302 redirect_uri?code
ua -> app
app -> app : set session

app -> auth : POST /token?authorization_code&client_id&client_secret&code&redirect_uri \n⭠ json {access_token, token_type:bearer, expires_in, info: {user}}

ua <- app : ⭠ page / sessionCookie

app -> auth : GET "Authorization: Bearer access_token" /

@enduml
